#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7803513231790997548) {
   out_7803513231790997548[0] = 0;
   out_7803513231790997548[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7803513231790997548[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7803513231790997548[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7803513231790997548[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7803513231790997548[5] = -sin(in_vec[1]);
   out_7803513231790997548[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7803513231790997548[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7803513231790997548[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7803513231790997548[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7803513231790997548[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7803513231790997548[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7803513231790997548[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7803513231790997548[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7803513231790997548[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7803513231790997548[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7803513231790997548[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7803513231790997548[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7460255189065293953) {
   out_7460255189065293953[0] = delta_x[0] + nom_x[0];
   out_7460255189065293953[1] = delta_x[1] + nom_x[1];
   out_7460255189065293953[2] = delta_x[2] + nom_x[2];
   out_7460255189065293953[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7460255189065293953[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7460255189065293953[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7460255189065293953[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7460255189065293953[7] = delta_x[6] + nom_x[7];
   out_7460255189065293953[8] = delta_x[7] + nom_x[8];
   out_7460255189065293953[9] = delta_x[8] + nom_x[9];
   out_7460255189065293953[10] = delta_x[9] + nom_x[10];
   out_7460255189065293953[11] = delta_x[10] + nom_x[11];
   out_7460255189065293953[12] = delta_x[11] + nom_x[12];
   out_7460255189065293953[13] = delta_x[12] + nom_x[13];
   out_7460255189065293953[14] = delta_x[13] + nom_x[14];
   out_7460255189065293953[15] = delta_x[14] + nom_x[15];
   out_7460255189065293953[16] = delta_x[15] + nom_x[16];
   out_7460255189065293953[17] = delta_x[16] + nom_x[17];
   out_7460255189065293953[18] = delta_x[17] + nom_x[18];
   out_7460255189065293953[19] = delta_x[18] + nom_x[19];
   out_7460255189065293953[20] = delta_x[19] + nom_x[20];
   out_7460255189065293953[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4071638527375331155) {
   out_4071638527375331155[0] = -nom_x[0] + true_x[0];
   out_4071638527375331155[1] = -nom_x[1] + true_x[1];
   out_4071638527375331155[2] = -nom_x[2] + true_x[2];
   out_4071638527375331155[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4071638527375331155[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4071638527375331155[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4071638527375331155[6] = -nom_x[7] + true_x[7];
   out_4071638527375331155[7] = -nom_x[8] + true_x[8];
   out_4071638527375331155[8] = -nom_x[9] + true_x[9];
   out_4071638527375331155[9] = -nom_x[10] + true_x[10];
   out_4071638527375331155[10] = -nom_x[11] + true_x[11];
   out_4071638527375331155[11] = -nom_x[12] + true_x[12];
   out_4071638527375331155[12] = -nom_x[13] + true_x[13];
   out_4071638527375331155[13] = -nom_x[14] + true_x[14];
   out_4071638527375331155[14] = -nom_x[15] + true_x[15];
   out_4071638527375331155[15] = -nom_x[16] + true_x[16];
   out_4071638527375331155[16] = -nom_x[17] + true_x[17];
   out_4071638527375331155[17] = -nom_x[18] + true_x[18];
   out_4071638527375331155[18] = -nom_x[19] + true_x[19];
   out_4071638527375331155[19] = -nom_x[20] + true_x[20];
   out_4071638527375331155[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3526444479561274867) {
   out_3526444479561274867[0] = 1.0;
   out_3526444479561274867[1] = 0;
   out_3526444479561274867[2] = 0;
   out_3526444479561274867[3] = 0;
   out_3526444479561274867[4] = 0;
   out_3526444479561274867[5] = 0;
   out_3526444479561274867[6] = 0;
   out_3526444479561274867[7] = 0;
   out_3526444479561274867[8] = 0;
   out_3526444479561274867[9] = 0;
   out_3526444479561274867[10] = 0;
   out_3526444479561274867[11] = 0;
   out_3526444479561274867[12] = 0;
   out_3526444479561274867[13] = 0;
   out_3526444479561274867[14] = 0;
   out_3526444479561274867[15] = 0;
   out_3526444479561274867[16] = 0;
   out_3526444479561274867[17] = 0;
   out_3526444479561274867[18] = 0;
   out_3526444479561274867[19] = 0;
   out_3526444479561274867[20] = 0;
   out_3526444479561274867[21] = 0;
   out_3526444479561274867[22] = 1.0;
   out_3526444479561274867[23] = 0;
   out_3526444479561274867[24] = 0;
   out_3526444479561274867[25] = 0;
   out_3526444479561274867[26] = 0;
   out_3526444479561274867[27] = 0;
   out_3526444479561274867[28] = 0;
   out_3526444479561274867[29] = 0;
   out_3526444479561274867[30] = 0;
   out_3526444479561274867[31] = 0;
   out_3526444479561274867[32] = 0;
   out_3526444479561274867[33] = 0;
   out_3526444479561274867[34] = 0;
   out_3526444479561274867[35] = 0;
   out_3526444479561274867[36] = 0;
   out_3526444479561274867[37] = 0;
   out_3526444479561274867[38] = 0;
   out_3526444479561274867[39] = 0;
   out_3526444479561274867[40] = 0;
   out_3526444479561274867[41] = 0;
   out_3526444479561274867[42] = 0;
   out_3526444479561274867[43] = 0;
   out_3526444479561274867[44] = 1.0;
   out_3526444479561274867[45] = 0;
   out_3526444479561274867[46] = 0;
   out_3526444479561274867[47] = 0;
   out_3526444479561274867[48] = 0;
   out_3526444479561274867[49] = 0;
   out_3526444479561274867[50] = 0;
   out_3526444479561274867[51] = 0;
   out_3526444479561274867[52] = 0;
   out_3526444479561274867[53] = 0;
   out_3526444479561274867[54] = 0;
   out_3526444479561274867[55] = 0;
   out_3526444479561274867[56] = 0;
   out_3526444479561274867[57] = 0;
   out_3526444479561274867[58] = 0;
   out_3526444479561274867[59] = 0;
   out_3526444479561274867[60] = 0;
   out_3526444479561274867[61] = 0;
   out_3526444479561274867[62] = 0;
   out_3526444479561274867[63] = 0;
   out_3526444479561274867[64] = 0;
   out_3526444479561274867[65] = 0;
   out_3526444479561274867[66] = -0.5*state[4];
   out_3526444479561274867[67] = -0.5*state[5];
   out_3526444479561274867[68] = -0.5*state[6];
   out_3526444479561274867[69] = 0;
   out_3526444479561274867[70] = 0;
   out_3526444479561274867[71] = 0;
   out_3526444479561274867[72] = 0;
   out_3526444479561274867[73] = 0;
   out_3526444479561274867[74] = 0;
   out_3526444479561274867[75] = 0;
   out_3526444479561274867[76] = 0;
   out_3526444479561274867[77] = 0;
   out_3526444479561274867[78] = 0;
   out_3526444479561274867[79] = 0;
   out_3526444479561274867[80] = 0;
   out_3526444479561274867[81] = 0;
   out_3526444479561274867[82] = 0;
   out_3526444479561274867[83] = 0;
   out_3526444479561274867[84] = 0;
   out_3526444479561274867[85] = 0;
   out_3526444479561274867[86] = 0;
   out_3526444479561274867[87] = 0.5*state[3];
   out_3526444479561274867[88] = 0.5*state[6];
   out_3526444479561274867[89] = -0.5*state[5];
   out_3526444479561274867[90] = 0;
   out_3526444479561274867[91] = 0;
   out_3526444479561274867[92] = 0;
   out_3526444479561274867[93] = 0;
   out_3526444479561274867[94] = 0;
   out_3526444479561274867[95] = 0;
   out_3526444479561274867[96] = 0;
   out_3526444479561274867[97] = 0;
   out_3526444479561274867[98] = 0;
   out_3526444479561274867[99] = 0;
   out_3526444479561274867[100] = 0;
   out_3526444479561274867[101] = 0;
   out_3526444479561274867[102] = 0;
   out_3526444479561274867[103] = 0;
   out_3526444479561274867[104] = 0;
   out_3526444479561274867[105] = 0;
   out_3526444479561274867[106] = 0;
   out_3526444479561274867[107] = 0;
   out_3526444479561274867[108] = -0.5*state[6];
   out_3526444479561274867[109] = 0.5*state[3];
   out_3526444479561274867[110] = 0.5*state[4];
   out_3526444479561274867[111] = 0;
   out_3526444479561274867[112] = 0;
   out_3526444479561274867[113] = 0;
   out_3526444479561274867[114] = 0;
   out_3526444479561274867[115] = 0;
   out_3526444479561274867[116] = 0;
   out_3526444479561274867[117] = 0;
   out_3526444479561274867[118] = 0;
   out_3526444479561274867[119] = 0;
   out_3526444479561274867[120] = 0;
   out_3526444479561274867[121] = 0;
   out_3526444479561274867[122] = 0;
   out_3526444479561274867[123] = 0;
   out_3526444479561274867[124] = 0;
   out_3526444479561274867[125] = 0;
   out_3526444479561274867[126] = 0;
   out_3526444479561274867[127] = 0;
   out_3526444479561274867[128] = 0;
   out_3526444479561274867[129] = 0.5*state[5];
   out_3526444479561274867[130] = -0.5*state[4];
   out_3526444479561274867[131] = 0.5*state[3];
   out_3526444479561274867[132] = 0;
   out_3526444479561274867[133] = 0;
   out_3526444479561274867[134] = 0;
   out_3526444479561274867[135] = 0;
   out_3526444479561274867[136] = 0;
   out_3526444479561274867[137] = 0;
   out_3526444479561274867[138] = 0;
   out_3526444479561274867[139] = 0;
   out_3526444479561274867[140] = 0;
   out_3526444479561274867[141] = 0;
   out_3526444479561274867[142] = 0;
   out_3526444479561274867[143] = 0;
   out_3526444479561274867[144] = 0;
   out_3526444479561274867[145] = 0;
   out_3526444479561274867[146] = 0;
   out_3526444479561274867[147] = 0;
   out_3526444479561274867[148] = 0;
   out_3526444479561274867[149] = 0;
   out_3526444479561274867[150] = 0;
   out_3526444479561274867[151] = 0;
   out_3526444479561274867[152] = 0;
   out_3526444479561274867[153] = 1.0;
   out_3526444479561274867[154] = 0;
   out_3526444479561274867[155] = 0;
   out_3526444479561274867[156] = 0;
   out_3526444479561274867[157] = 0;
   out_3526444479561274867[158] = 0;
   out_3526444479561274867[159] = 0;
   out_3526444479561274867[160] = 0;
   out_3526444479561274867[161] = 0;
   out_3526444479561274867[162] = 0;
   out_3526444479561274867[163] = 0;
   out_3526444479561274867[164] = 0;
   out_3526444479561274867[165] = 0;
   out_3526444479561274867[166] = 0;
   out_3526444479561274867[167] = 0;
   out_3526444479561274867[168] = 0;
   out_3526444479561274867[169] = 0;
   out_3526444479561274867[170] = 0;
   out_3526444479561274867[171] = 0;
   out_3526444479561274867[172] = 0;
   out_3526444479561274867[173] = 0;
   out_3526444479561274867[174] = 0;
   out_3526444479561274867[175] = 1.0;
   out_3526444479561274867[176] = 0;
   out_3526444479561274867[177] = 0;
   out_3526444479561274867[178] = 0;
   out_3526444479561274867[179] = 0;
   out_3526444479561274867[180] = 0;
   out_3526444479561274867[181] = 0;
   out_3526444479561274867[182] = 0;
   out_3526444479561274867[183] = 0;
   out_3526444479561274867[184] = 0;
   out_3526444479561274867[185] = 0;
   out_3526444479561274867[186] = 0;
   out_3526444479561274867[187] = 0;
   out_3526444479561274867[188] = 0;
   out_3526444479561274867[189] = 0;
   out_3526444479561274867[190] = 0;
   out_3526444479561274867[191] = 0;
   out_3526444479561274867[192] = 0;
   out_3526444479561274867[193] = 0;
   out_3526444479561274867[194] = 0;
   out_3526444479561274867[195] = 0;
   out_3526444479561274867[196] = 0;
   out_3526444479561274867[197] = 1.0;
   out_3526444479561274867[198] = 0;
   out_3526444479561274867[199] = 0;
   out_3526444479561274867[200] = 0;
   out_3526444479561274867[201] = 0;
   out_3526444479561274867[202] = 0;
   out_3526444479561274867[203] = 0;
   out_3526444479561274867[204] = 0;
   out_3526444479561274867[205] = 0;
   out_3526444479561274867[206] = 0;
   out_3526444479561274867[207] = 0;
   out_3526444479561274867[208] = 0;
   out_3526444479561274867[209] = 0;
   out_3526444479561274867[210] = 0;
   out_3526444479561274867[211] = 0;
   out_3526444479561274867[212] = 0;
   out_3526444479561274867[213] = 0;
   out_3526444479561274867[214] = 0;
   out_3526444479561274867[215] = 0;
   out_3526444479561274867[216] = 0;
   out_3526444479561274867[217] = 0;
   out_3526444479561274867[218] = 0;
   out_3526444479561274867[219] = 1.0;
   out_3526444479561274867[220] = 0;
   out_3526444479561274867[221] = 0;
   out_3526444479561274867[222] = 0;
   out_3526444479561274867[223] = 0;
   out_3526444479561274867[224] = 0;
   out_3526444479561274867[225] = 0;
   out_3526444479561274867[226] = 0;
   out_3526444479561274867[227] = 0;
   out_3526444479561274867[228] = 0;
   out_3526444479561274867[229] = 0;
   out_3526444479561274867[230] = 0;
   out_3526444479561274867[231] = 0;
   out_3526444479561274867[232] = 0;
   out_3526444479561274867[233] = 0;
   out_3526444479561274867[234] = 0;
   out_3526444479561274867[235] = 0;
   out_3526444479561274867[236] = 0;
   out_3526444479561274867[237] = 0;
   out_3526444479561274867[238] = 0;
   out_3526444479561274867[239] = 0;
   out_3526444479561274867[240] = 0;
   out_3526444479561274867[241] = 1.0;
   out_3526444479561274867[242] = 0;
   out_3526444479561274867[243] = 0;
   out_3526444479561274867[244] = 0;
   out_3526444479561274867[245] = 0;
   out_3526444479561274867[246] = 0;
   out_3526444479561274867[247] = 0;
   out_3526444479561274867[248] = 0;
   out_3526444479561274867[249] = 0;
   out_3526444479561274867[250] = 0;
   out_3526444479561274867[251] = 0;
   out_3526444479561274867[252] = 0;
   out_3526444479561274867[253] = 0;
   out_3526444479561274867[254] = 0;
   out_3526444479561274867[255] = 0;
   out_3526444479561274867[256] = 0;
   out_3526444479561274867[257] = 0;
   out_3526444479561274867[258] = 0;
   out_3526444479561274867[259] = 0;
   out_3526444479561274867[260] = 0;
   out_3526444479561274867[261] = 0;
   out_3526444479561274867[262] = 0;
   out_3526444479561274867[263] = 1.0;
   out_3526444479561274867[264] = 0;
   out_3526444479561274867[265] = 0;
   out_3526444479561274867[266] = 0;
   out_3526444479561274867[267] = 0;
   out_3526444479561274867[268] = 0;
   out_3526444479561274867[269] = 0;
   out_3526444479561274867[270] = 0;
   out_3526444479561274867[271] = 0;
   out_3526444479561274867[272] = 0;
   out_3526444479561274867[273] = 0;
   out_3526444479561274867[274] = 0;
   out_3526444479561274867[275] = 0;
   out_3526444479561274867[276] = 0;
   out_3526444479561274867[277] = 0;
   out_3526444479561274867[278] = 0;
   out_3526444479561274867[279] = 0;
   out_3526444479561274867[280] = 0;
   out_3526444479561274867[281] = 0;
   out_3526444479561274867[282] = 0;
   out_3526444479561274867[283] = 0;
   out_3526444479561274867[284] = 0;
   out_3526444479561274867[285] = 1.0;
   out_3526444479561274867[286] = 0;
   out_3526444479561274867[287] = 0;
   out_3526444479561274867[288] = 0;
   out_3526444479561274867[289] = 0;
   out_3526444479561274867[290] = 0;
   out_3526444479561274867[291] = 0;
   out_3526444479561274867[292] = 0;
   out_3526444479561274867[293] = 0;
   out_3526444479561274867[294] = 0;
   out_3526444479561274867[295] = 0;
   out_3526444479561274867[296] = 0;
   out_3526444479561274867[297] = 0;
   out_3526444479561274867[298] = 0;
   out_3526444479561274867[299] = 0;
   out_3526444479561274867[300] = 0;
   out_3526444479561274867[301] = 0;
   out_3526444479561274867[302] = 0;
   out_3526444479561274867[303] = 0;
   out_3526444479561274867[304] = 0;
   out_3526444479561274867[305] = 0;
   out_3526444479561274867[306] = 0;
   out_3526444479561274867[307] = 1.0;
   out_3526444479561274867[308] = 0;
   out_3526444479561274867[309] = 0;
   out_3526444479561274867[310] = 0;
   out_3526444479561274867[311] = 0;
   out_3526444479561274867[312] = 0;
   out_3526444479561274867[313] = 0;
   out_3526444479561274867[314] = 0;
   out_3526444479561274867[315] = 0;
   out_3526444479561274867[316] = 0;
   out_3526444479561274867[317] = 0;
   out_3526444479561274867[318] = 0;
   out_3526444479561274867[319] = 0;
   out_3526444479561274867[320] = 0;
   out_3526444479561274867[321] = 0;
   out_3526444479561274867[322] = 0;
   out_3526444479561274867[323] = 0;
   out_3526444479561274867[324] = 0;
   out_3526444479561274867[325] = 0;
   out_3526444479561274867[326] = 0;
   out_3526444479561274867[327] = 0;
   out_3526444479561274867[328] = 0;
   out_3526444479561274867[329] = 1.0;
   out_3526444479561274867[330] = 0;
   out_3526444479561274867[331] = 0;
   out_3526444479561274867[332] = 0;
   out_3526444479561274867[333] = 0;
   out_3526444479561274867[334] = 0;
   out_3526444479561274867[335] = 0;
   out_3526444479561274867[336] = 0;
   out_3526444479561274867[337] = 0;
   out_3526444479561274867[338] = 0;
   out_3526444479561274867[339] = 0;
   out_3526444479561274867[340] = 0;
   out_3526444479561274867[341] = 0;
   out_3526444479561274867[342] = 0;
   out_3526444479561274867[343] = 0;
   out_3526444479561274867[344] = 0;
   out_3526444479561274867[345] = 0;
   out_3526444479561274867[346] = 0;
   out_3526444479561274867[347] = 0;
   out_3526444479561274867[348] = 0;
   out_3526444479561274867[349] = 0;
   out_3526444479561274867[350] = 0;
   out_3526444479561274867[351] = 1.0;
   out_3526444479561274867[352] = 0;
   out_3526444479561274867[353] = 0;
   out_3526444479561274867[354] = 0;
   out_3526444479561274867[355] = 0;
   out_3526444479561274867[356] = 0;
   out_3526444479561274867[357] = 0;
   out_3526444479561274867[358] = 0;
   out_3526444479561274867[359] = 0;
   out_3526444479561274867[360] = 0;
   out_3526444479561274867[361] = 0;
   out_3526444479561274867[362] = 0;
   out_3526444479561274867[363] = 0;
   out_3526444479561274867[364] = 0;
   out_3526444479561274867[365] = 0;
   out_3526444479561274867[366] = 0;
   out_3526444479561274867[367] = 0;
   out_3526444479561274867[368] = 0;
   out_3526444479561274867[369] = 0;
   out_3526444479561274867[370] = 0;
   out_3526444479561274867[371] = 0;
   out_3526444479561274867[372] = 0;
   out_3526444479561274867[373] = 1.0;
   out_3526444479561274867[374] = 0;
   out_3526444479561274867[375] = 0;
   out_3526444479561274867[376] = 0;
   out_3526444479561274867[377] = 0;
   out_3526444479561274867[378] = 0;
   out_3526444479561274867[379] = 0;
   out_3526444479561274867[380] = 0;
   out_3526444479561274867[381] = 0;
   out_3526444479561274867[382] = 0;
   out_3526444479561274867[383] = 0;
   out_3526444479561274867[384] = 0;
   out_3526444479561274867[385] = 0;
   out_3526444479561274867[386] = 0;
   out_3526444479561274867[387] = 0;
   out_3526444479561274867[388] = 0;
   out_3526444479561274867[389] = 0;
   out_3526444479561274867[390] = 0;
   out_3526444479561274867[391] = 0;
   out_3526444479561274867[392] = 0;
   out_3526444479561274867[393] = 0;
   out_3526444479561274867[394] = 0;
   out_3526444479561274867[395] = 1.0;
   out_3526444479561274867[396] = 0;
   out_3526444479561274867[397] = 0;
   out_3526444479561274867[398] = 0;
   out_3526444479561274867[399] = 0;
   out_3526444479561274867[400] = 0;
   out_3526444479561274867[401] = 0;
   out_3526444479561274867[402] = 0;
   out_3526444479561274867[403] = 0;
   out_3526444479561274867[404] = 0;
   out_3526444479561274867[405] = 0;
   out_3526444479561274867[406] = 0;
   out_3526444479561274867[407] = 0;
   out_3526444479561274867[408] = 0;
   out_3526444479561274867[409] = 0;
   out_3526444479561274867[410] = 0;
   out_3526444479561274867[411] = 0;
   out_3526444479561274867[412] = 0;
   out_3526444479561274867[413] = 0;
   out_3526444479561274867[414] = 0;
   out_3526444479561274867[415] = 0;
   out_3526444479561274867[416] = 0;
   out_3526444479561274867[417] = 1.0;
   out_3526444479561274867[418] = 0;
   out_3526444479561274867[419] = 0;
   out_3526444479561274867[420] = 0;
   out_3526444479561274867[421] = 0;
   out_3526444479561274867[422] = 0;
   out_3526444479561274867[423] = 0;
   out_3526444479561274867[424] = 0;
   out_3526444479561274867[425] = 0;
   out_3526444479561274867[426] = 0;
   out_3526444479561274867[427] = 0;
   out_3526444479561274867[428] = 0;
   out_3526444479561274867[429] = 0;
   out_3526444479561274867[430] = 0;
   out_3526444479561274867[431] = 0;
   out_3526444479561274867[432] = 0;
   out_3526444479561274867[433] = 0;
   out_3526444479561274867[434] = 0;
   out_3526444479561274867[435] = 0;
   out_3526444479561274867[436] = 0;
   out_3526444479561274867[437] = 0;
   out_3526444479561274867[438] = 0;
   out_3526444479561274867[439] = 1.0;
   out_3526444479561274867[440] = 0;
   out_3526444479561274867[441] = 0;
   out_3526444479561274867[442] = 0;
   out_3526444479561274867[443] = 0;
   out_3526444479561274867[444] = 0;
   out_3526444479561274867[445] = 0;
   out_3526444479561274867[446] = 0;
   out_3526444479561274867[447] = 0;
   out_3526444479561274867[448] = 0;
   out_3526444479561274867[449] = 0;
   out_3526444479561274867[450] = 0;
   out_3526444479561274867[451] = 0;
   out_3526444479561274867[452] = 0;
   out_3526444479561274867[453] = 0;
   out_3526444479561274867[454] = 0;
   out_3526444479561274867[455] = 0;
   out_3526444479561274867[456] = 0;
   out_3526444479561274867[457] = 0;
   out_3526444479561274867[458] = 0;
   out_3526444479561274867[459] = 0;
   out_3526444479561274867[460] = 0;
   out_3526444479561274867[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3349602173172937323) {
   out_3349602173172937323[0] = dt*state[7] + state[0];
   out_3349602173172937323[1] = dt*state[8] + state[1];
   out_3349602173172937323[2] = dt*state[9] + state[2];
   out_3349602173172937323[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3349602173172937323[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3349602173172937323[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3349602173172937323[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3349602173172937323[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3349602173172937323[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3349602173172937323[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3349602173172937323[10] = state[10];
   out_3349602173172937323[11] = state[11];
   out_3349602173172937323[12] = state[12];
   out_3349602173172937323[13] = state[13];
   out_3349602173172937323[14] = state[14];
   out_3349602173172937323[15] = state[15];
   out_3349602173172937323[16] = state[16];
   out_3349602173172937323[17] = state[17];
   out_3349602173172937323[18] = state[18];
   out_3349602173172937323[19] = state[19];
   out_3349602173172937323[20] = state[20];
   out_3349602173172937323[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5390829708415122205) {
   out_5390829708415122205[0] = 1;
   out_5390829708415122205[1] = 0;
   out_5390829708415122205[2] = 0;
   out_5390829708415122205[3] = 0;
   out_5390829708415122205[4] = 0;
   out_5390829708415122205[5] = 0;
   out_5390829708415122205[6] = dt;
   out_5390829708415122205[7] = 0;
   out_5390829708415122205[8] = 0;
   out_5390829708415122205[9] = 0;
   out_5390829708415122205[10] = 0;
   out_5390829708415122205[11] = 0;
   out_5390829708415122205[12] = 0;
   out_5390829708415122205[13] = 0;
   out_5390829708415122205[14] = 0;
   out_5390829708415122205[15] = 0;
   out_5390829708415122205[16] = 0;
   out_5390829708415122205[17] = 0;
   out_5390829708415122205[18] = 0;
   out_5390829708415122205[19] = 0;
   out_5390829708415122205[20] = 0;
   out_5390829708415122205[21] = 0;
   out_5390829708415122205[22] = 1;
   out_5390829708415122205[23] = 0;
   out_5390829708415122205[24] = 0;
   out_5390829708415122205[25] = 0;
   out_5390829708415122205[26] = 0;
   out_5390829708415122205[27] = 0;
   out_5390829708415122205[28] = dt;
   out_5390829708415122205[29] = 0;
   out_5390829708415122205[30] = 0;
   out_5390829708415122205[31] = 0;
   out_5390829708415122205[32] = 0;
   out_5390829708415122205[33] = 0;
   out_5390829708415122205[34] = 0;
   out_5390829708415122205[35] = 0;
   out_5390829708415122205[36] = 0;
   out_5390829708415122205[37] = 0;
   out_5390829708415122205[38] = 0;
   out_5390829708415122205[39] = 0;
   out_5390829708415122205[40] = 0;
   out_5390829708415122205[41] = 0;
   out_5390829708415122205[42] = 0;
   out_5390829708415122205[43] = 0;
   out_5390829708415122205[44] = 1;
   out_5390829708415122205[45] = 0;
   out_5390829708415122205[46] = 0;
   out_5390829708415122205[47] = 0;
   out_5390829708415122205[48] = 0;
   out_5390829708415122205[49] = 0;
   out_5390829708415122205[50] = dt;
   out_5390829708415122205[51] = 0;
   out_5390829708415122205[52] = 0;
   out_5390829708415122205[53] = 0;
   out_5390829708415122205[54] = 0;
   out_5390829708415122205[55] = 0;
   out_5390829708415122205[56] = 0;
   out_5390829708415122205[57] = 0;
   out_5390829708415122205[58] = 0;
   out_5390829708415122205[59] = 0;
   out_5390829708415122205[60] = 0;
   out_5390829708415122205[61] = 0;
   out_5390829708415122205[62] = 0;
   out_5390829708415122205[63] = 0;
   out_5390829708415122205[64] = 0;
   out_5390829708415122205[65] = 0;
   out_5390829708415122205[66] = 1;
   out_5390829708415122205[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5390829708415122205[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5390829708415122205[69] = 0;
   out_5390829708415122205[70] = 0;
   out_5390829708415122205[71] = 0;
   out_5390829708415122205[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5390829708415122205[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5390829708415122205[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5390829708415122205[75] = 0;
   out_5390829708415122205[76] = 0;
   out_5390829708415122205[77] = 0;
   out_5390829708415122205[78] = 0;
   out_5390829708415122205[79] = 0;
   out_5390829708415122205[80] = 0;
   out_5390829708415122205[81] = 0;
   out_5390829708415122205[82] = 0;
   out_5390829708415122205[83] = 0;
   out_5390829708415122205[84] = 0;
   out_5390829708415122205[85] = 0;
   out_5390829708415122205[86] = 0;
   out_5390829708415122205[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5390829708415122205[88] = 1;
   out_5390829708415122205[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5390829708415122205[90] = 0;
   out_5390829708415122205[91] = 0;
   out_5390829708415122205[92] = 0;
   out_5390829708415122205[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5390829708415122205[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5390829708415122205[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5390829708415122205[96] = 0;
   out_5390829708415122205[97] = 0;
   out_5390829708415122205[98] = 0;
   out_5390829708415122205[99] = 0;
   out_5390829708415122205[100] = 0;
   out_5390829708415122205[101] = 0;
   out_5390829708415122205[102] = 0;
   out_5390829708415122205[103] = 0;
   out_5390829708415122205[104] = 0;
   out_5390829708415122205[105] = 0;
   out_5390829708415122205[106] = 0;
   out_5390829708415122205[107] = 0;
   out_5390829708415122205[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5390829708415122205[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5390829708415122205[110] = 1;
   out_5390829708415122205[111] = 0;
   out_5390829708415122205[112] = 0;
   out_5390829708415122205[113] = 0;
   out_5390829708415122205[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5390829708415122205[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5390829708415122205[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5390829708415122205[117] = 0;
   out_5390829708415122205[118] = 0;
   out_5390829708415122205[119] = 0;
   out_5390829708415122205[120] = 0;
   out_5390829708415122205[121] = 0;
   out_5390829708415122205[122] = 0;
   out_5390829708415122205[123] = 0;
   out_5390829708415122205[124] = 0;
   out_5390829708415122205[125] = 0;
   out_5390829708415122205[126] = 0;
   out_5390829708415122205[127] = 0;
   out_5390829708415122205[128] = 0;
   out_5390829708415122205[129] = 0;
   out_5390829708415122205[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5390829708415122205[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5390829708415122205[132] = 1;
   out_5390829708415122205[133] = 0;
   out_5390829708415122205[134] = 0;
   out_5390829708415122205[135] = 0;
   out_5390829708415122205[136] = 0;
   out_5390829708415122205[137] = 0;
   out_5390829708415122205[138] = 0;
   out_5390829708415122205[139] = 0;
   out_5390829708415122205[140] = 0;
   out_5390829708415122205[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5390829708415122205[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5390829708415122205[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5390829708415122205[144] = 0;
   out_5390829708415122205[145] = 0;
   out_5390829708415122205[146] = 0;
   out_5390829708415122205[147] = 0;
   out_5390829708415122205[148] = 0;
   out_5390829708415122205[149] = 0;
   out_5390829708415122205[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5390829708415122205[151] = 0;
   out_5390829708415122205[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5390829708415122205[153] = 0;
   out_5390829708415122205[154] = 1;
   out_5390829708415122205[155] = 0;
   out_5390829708415122205[156] = 0;
   out_5390829708415122205[157] = 0;
   out_5390829708415122205[158] = 0;
   out_5390829708415122205[159] = 0;
   out_5390829708415122205[160] = 0;
   out_5390829708415122205[161] = 0;
   out_5390829708415122205[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5390829708415122205[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5390829708415122205[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5390829708415122205[165] = 0;
   out_5390829708415122205[166] = 0;
   out_5390829708415122205[167] = 0;
   out_5390829708415122205[168] = 0;
   out_5390829708415122205[169] = 0;
   out_5390829708415122205[170] = 0;
   out_5390829708415122205[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5390829708415122205[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5390829708415122205[173] = 0;
   out_5390829708415122205[174] = 0;
   out_5390829708415122205[175] = 0;
   out_5390829708415122205[176] = 1;
   out_5390829708415122205[177] = 0;
   out_5390829708415122205[178] = 0;
   out_5390829708415122205[179] = 0;
   out_5390829708415122205[180] = 0;
   out_5390829708415122205[181] = 0;
   out_5390829708415122205[182] = 0;
   out_5390829708415122205[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5390829708415122205[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5390829708415122205[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5390829708415122205[186] = 0;
   out_5390829708415122205[187] = 0;
   out_5390829708415122205[188] = 0;
   out_5390829708415122205[189] = 0;
   out_5390829708415122205[190] = 0;
   out_5390829708415122205[191] = 0;
   out_5390829708415122205[192] = 0;
   out_5390829708415122205[193] = 0;
   out_5390829708415122205[194] = 0;
   out_5390829708415122205[195] = 0;
   out_5390829708415122205[196] = 0;
   out_5390829708415122205[197] = 0;
   out_5390829708415122205[198] = 1;
   out_5390829708415122205[199] = 0;
   out_5390829708415122205[200] = 0;
   out_5390829708415122205[201] = 0;
   out_5390829708415122205[202] = 0;
   out_5390829708415122205[203] = 0;
   out_5390829708415122205[204] = 0;
   out_5390829708415122205[205] = 0;
   out_5390829708415122205[206] = 0;
   out_5390829708415122205[207] = 0;
   out_5390829708415122205[208] = 0;
   out_5390829708415122205[209] = 0;
   out_5390829708415122205[210] = 0;
   out_5390829708415122205[211] = 0;
   out_5390829708415122205[212] = 0;
   out_5390829708415122205[213] = 0;
   out_5390829708415122205[214] = 0;
   out_5390829708415122205[215] = 0;
   out_5390829708415122205[216] = 0;
   out_5390829708415122205[217] = 0;
   out_5390829708415122205[218] = 0;
   out_5390829708415122205[219] = 0;
   out_5390829708415122205[220] = 1;
   out_5390829708415122205[221] = 0;
   out_5390829708415122205[222] = 0;
   out_5390829708415122205[223] = 0;
   out_5390829708415122205[224] = 0;
   out_5390829708415122205[225] = 0;
   out_5390829708415122205[226] = 0;
   out_5390829708415122205[227] = 0;
   out_5390829708415122205[228] = 0;
   out_5390829708415122205[229] = 0;
   out_5390829708415122205[230] = 0;
   out_5390829708415122205[231] = 0;
   out_5390829708415122205[232] = 0;
   out_5390829708415122205[233] = 0;
   out_5390829708415122205[234] = 0;
   out_5390829708415122205[235] = 0;
   out_5390829708415122205[236] = 0;
   out_5390829708415122205[237] = 0;
   out_5390829708415122205[238] = 0;
   out_5390829708415122205[239] = 0;
   out_5390829708415122205[240] = 0;
   out_5390829708415122205[241] = 0;
   out_5390829708415122205[242] = 1;
   out_5390829708415122205[243] = 0;
   out_5390829708415122205[244] = 0;
   out_5390829708415122205[245] = 0;
   out_5390829708415122205[246] = 0;
   out_5390829708415122205[247] = 0;
   out_5390829708415122205[248] = 0;
   out_5390829708415122205[249] = 0;
   out_5390829708415122205[250] = 0;
   out_5390829708415122205[251] = 0;
   out_5390829708415122205[252] = 0;
   out_5390829708415122205[253] = 0;
   out_5390829708415122205[254] = 0;
   out_5390829708415122205[255] = 0;
   out_5390829708415122205[256] = 0;
   out_5390829708415122205[257] = 0;
   out_5390829708415122205[258] = 0;
   out_5390829708415122205[259] = 0;
   out_5390829708415122205[260] = 0;
   out_5390829708415122205[261] = 0;
   out_5390829708415122205[262] = 0;
   out_5390829708415122205[263] = 0;
   out_5390829708415122205[264] = 1;
   out_5390829708415122205[265] = 0;
   out_5390829708415122205[266] = 0;
   out_5390829708415122205[267] = 0;
   out_5390829708415122205[268] = 0;
   out_5390829708415122205[269] = 0;
   out_5390829708415122205[270] = 0;
   out_5390829708415122205[271] = 0;
   out_5390829708415122205[272] = 0;
   out_5390829708415122205[273] = 0;
   out_5390829708415122205[274] = 0;
   out_5390829708415122205[275] = 0;
   out_5390829708415122205[276] = 0;
   out_5390829708415122205[277] = 0;
   out_5390829708415122205[278] = 0;
   out_5390829708415122205[279] = 0;
   out_5390829708415122205[280] = 0;
   out_5390829708415122205[281] = 0;
   out_5390829708415122205[282] = 0;
   out_5390829708415122205[283] = 0;
   out_5390829708415122205[284] = 0;
   out_5390829708415122205[285] = 0;
   out_5390829708415122205[286] = 1;
   out_5390829708415122205[287] = 0;
   out_5390829708415122205[288] = 0;
   out_5390829708415122205[289] = 0;
   out_5390829708415122205[290] = 0;
   out_5390829708415122205[291] = 0;
   out_5390829708415122205[292] = 0;
   out_5390829708415122205[293] = 0;
   out_5390829708415122205[294] = 0;
   out_5390829708415122205[295] = 0;
   out_5390829708415122205[296] = 0;
   out_5390829708415122205[297] = 0;
   out_5390829708415122205[298] = 0;
   out_5390829708415122205[299] = 0;
   out_5390829708415122205[300] = 0;
   out_5390829708415122205[301] = 0;
   out_5390829708415122205[302] = 0;
   out_5390829708415122205[303] = 0;
   out_5390829708415122205[304] = 0;
   out_5390829708415122205[305] = 0;
   out_5390829708415122205[306] = 0;
   out_5390829708415122205[307] = 0;
   out_5390829708415122205[308] = 1;
   out_5390829708415122205[309] = 0;
   out_5390829708415122205[310] = 0;
   out_5390829708415122205[311] = 0;
   out_5390829708415122205[312] = 0;
   out_5390829708415122205[313] = 0;
   out_5390829708415122205[314] = 0;
   out_5390829708415122205[315] = 0;
   out_5390829708415122205[316] = 0;
   out_5390829708415122205[317] = 0;
   out_5390829708415122205[318] = 0;
   out_5390829708415122205[319] = 0;
   out_5390829708415122205[320] = 0;
   out_5390829708415122205[321] = 0;
   out_5390829708415122205[322] = 0;
   out_5390829708415122205[323] = 0;
   out_5390829708415122205[324] = 0;
   out_5390829708415122205[325] = 0;
   out_5390829708415122205[326] = 0;
   out_5390829708415122205[327] = 0;
   out_5390829708415122205[328] = 0;
   out_5390829708415122205[329] = 0;
   out_5390829708415122205[330] = 1;
   out_5390829708415122205[331] = 0;
   out_5390829708415122205[332] = 0;
   out_5390829708415122205[333] = 0;
   out_5390829708415122205[334] = 0;
   out_5390829708415122205[335] = 0;
   out_5390829708415122205[336] = 0;
   out_5390829708415122205[337] = 0;
   out_5390829708415122205[338] = 0;
   out_5390829708415122205[339] = 0;
   out_5390829708415122205[340] = 0;
   out_5390829708415122205[341] = 0;
   out_5390829708415122205[342] = 0;
   out_5390829708415122205[343] = 0;
   out_5390829708415122205[344] = 0;
   out_5390829708415122205[345] = 0;
   out_5390829708415122205[346] = 0;
   out_5390829708415122205[347] = 0;
   out_5390829708415122205[348] = 0;
   out_5390829708415122205[349] = 0;
   out_5390829708415122205[350] = 0;
   out_5390829708415122205[351] = 0;
   out_5390829708415122205[352] = 1;
   out_5390829708415122205[353] = 0;
   out_5390829708415122205[354] = 0;
   out_5390829708415122205[355] = 0;
   out_5390829708415122205[356] = 0;
   out_5390829708415122205[357] = 0;
   out_5390829708415122205[358] = 0;
   out_5390829708415122205[359] = 0;
   out_5390829708415122205[360] = 0;
   out_5390829708415122205[361] = 0;
   out_5390829708415122205[362] = 0;
   out_5390829708415122205[363] = 0;
   out_5390829708415122205[364] = 0;
   out_5390829708415122205[365] = 0;
   out_5390829708415122205[366] = 0;
   out_5390829708415122205[367] = 0;
   out_5390829708415122205[368] = 0;
   out_5390829708415122205[369] = 0;
   out_5390829708415122205[370] = 0;
   out_5390829708415122205[371] = 0;
   out_5390829708415122205[372] = 0;
   out_5390829708415122205[373] = 0;
   out_5390829708415122205[374] = 1;
   out_5390829708415122205[375] = 0;
   out_5390829708415122205[376] = 0;
   out_5390829708415122205[377] = 0;
   out_5390829708415122205[378] = 0;
   out_5390829708415122205[379] = 0;
   out_5390829708415122205[380] = 0;
   out_5390829708415122205[381] = 0;
   out_5390829708415122205[382] = 0;
   out_5390829708415122205[383] = 0;
   out_5390829708415122205[384] = 0;
   out_5390829708415122205[385] = 0;
   out_5390829708415122205[386] = 0;
   out_5390829708415122205[387] = 0;
   out_5390829708415122205[388] = 0;
   out_5390829708415122205[389] = 0;
   out_5390829708415122205[390] = 0;
   out_5390829708415122205[391] = 0;
   out_5390829708415122205[392] = 0;
   out_5390829708415122205[393] = 0;
   out_5390829708415122205[394] = 0;
   out_5390829708415122205[395] = 0;
   out_5390829708415122205[396] = 1;
   out_5390829708415122205[397] = 0;
   out_5390829708415122205[398] = 0;
   out_5390829708415122205[399] = 0;
   out_5390829708415122205[400] = 0;
   out_5390829708415122205[401] = 0;
   out_5390829708415122205[402] = 0;
   out_5390829708415122205[403] = 0;
   out_5390829708415122205[404] = 0;
   out_5390829708415122205[405] = 0;
   out_5390829708415122205[406] = 0;
   out_5390829708415122205[407] = 0;
   out_5390829708415122205[408] = 0;
   out_5390829708415122205[409] = 0;
   out_5390829708415122205[410] = 0;
   out_5390829708415122205[411] = 0;
   out_5390829708415122205[412] = 0;
   out_5390829708415122205[413] = 0;
   out_5390829708415122205[414] = 0;
   out_5390829708415122205[415] = 0;
   out_5390829708415122205[416] = 0;
   out_5390829708415122205[417] = 0;
   out_5390829708415122205[418] = 1;
   out_5390829708415122205[419] = 0;
   out_5390829708415122205[420] = 0;
   out_5390829708415122205[421] = 0;
   out_5390829708415122205[422] = 0;
   out_5390829708415122205[423] = 0;
   out_5390829708415122205[424] = 0;
   out_5390829708415122205[425] = 0;
   out_5390829708415122205[426] = 0;
   out_5390829708415122205[427] = 0;
   out_5390829708415122205[428] = 0;
   out_5390829708415122205[429] = 0;
   out_5390829708415122205[430] = 0;
   out_5390829708415122205[431] = 0;
   out_5390829708415122205[432] = 0;
   out_5390829708415122205[433] = 0;
   out_5390829708415122205[434] = 0;
   out_5390829708415122205[435] = 0;
   out_5390829708415122205[436] = 0;
   out_5390829708415122205[437] = 0;
   out_5390829708415122205[438] = 0;
   out_5390829708415122205[439] = 0;
   out_5390829708415122205[440] = 1;
}
void h_4(double *state, double *unused, double *out_6380028793191626086) {
   out_6380028793191626086[0] = state[10] + state[13];
   out_6380028793191626086[1] = state[11] + state[14];
   out_6380028793191626086[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8109265692051530393) {
   out_8109265692051530393[0] = 0;
   out_8109265692051530393[1] = 0;
   out_8109265692051530393[2] = 0;
   out_8109265692051530393[3] = 0;
   out_8109265692051530393[4] = 0;
   out_8109265692051530393[5] = 0;
   out_8109265692051530393[6] = 0;
   out_8109265692051530393[7] = 0;
   out_8109265692051530393[8] = 0;
   out_8109265692051530393[9] = 0;
   out_8109265692051530393[10] = 1;
   out_8109265692051530393[11] = 0;
   out_8109265692051530393[12] = 0;
   out_8109265692051530393[13] = 1;
   out_8109265692051530393[14] = 0;
   out_8109265692051530393[15] = 0;
   out_8109265692051530393[16] = 0;
   out_8109265692051530393[17] = 0;
   out_8109265692051530393[18] = 0;
   out_8109265692051530393[19] = 0;
   out_8109265692051530393[20] = 0;
   out_8109265692051530393[21] = 0;
   out_8109265692051530393[22] = 0;
   out_8109265692051530393[23] = 0;
   out_8109265692051530393[24] = 0;
   out_8109265692051530393[25] = 0;
   out_8109265692051530393[26] = 0;
   out_8109265692051530393[27] = 0;
   out_8109265692051530393[28] = 0;
   out_8109265692051530393[29] = 0;
   out_8109265692051530393[30] = 0;
   out_8109265692051530393[31] = 0;
   out_8109265692051530393[32] = 0;
   out_8109265692051530393[33] = 1;
   out_8109265692051530393[34] = 0;
   out_8109265692051530393[35] = 0;
   out_8109265692051530393[36] = 1;
   out_8109265692051530393[37] = 0;
   out_8109265692051530393[38] = 0;
   out_8109265692051530393[39] = 0;
   out_8109265692051530393[40] = 0;
   out_8109265692051530393[41] = 0;
   out_8109265692051530393[42] = 0;
   out_8109265692051530393[43] = 0;
   out_8109265692051530393[44] = 0;
   out_8109265692051530393[45] = 0;
   out_8109265692051530393[46] = 0;
   out_8109265692051530393[47] = 0;
   out_8109265692051530393[48] = 0;
   out_8109265692051530393[49] = 0;
   out_8109265692051530393[50] = 0;
   out_8109265692051530393[51] = 0;
   out_8109265692051530393[52] = 0;
   out_8109265692051530393[53] = 0;
   out_8109265692051530393[54] = 0;
   out_8109265692051530393[55] = 0;
   out_8109265692051530393[56] = 1;
   out_8109265692051530393[57] = 0;
   out_8109265692051530393[58] = 0;
   out_8109265692051530393[59] = 1;
   out_8109265692051530393[60] = 0;
   out_8109265692051530393[61] = 0;
   out_8109265692051530393[62] = 0;
   out_8109265692051530393[63] = 0;
   out_8109265692051530393[64] = 0;
   out_8109265692051530393[65] = 0;
}
void h_9(double *state, double *unused, double *out_2910357396975870841) {
   out_2910357396975870841[0] = state[10];
   out_2910357396975870841[1] = state[11];
   out_2910357396975870841[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3050259446393573753) {
   out_3050259446393573753[0] = 0;
   out_3050259446393573753[1] = 0;
   out_3050259446393573753[2] = 0;
   out_3050259446393573753[3] = 0;
   out_3050259446393573753[4] = 0;
   out_3050259446393573753[5] = 0;
   out_3050259446393573753[6] = 0;
   out_3050259446393573753[7] = 0;
   out_3050259446393573753[8] = 0;
   out_3050259446393573753[9] = 0;
   out_3050259446393573753[10] = 1;
   out_3050259446393573753[11] = 0;
   out_3050259446393573753[12] = 0;
   out_3050259446393573753[13] = 0;
   out_3050259446393573753[14] = 0;
   out_3050259446393573753[15] = 0;
   out_3050259446393573753[16] = 0;
   out_3050259446393573753[17] = 0;
   out_3050259446393573753[18] = 0;
   out_3050259446393573753[19] = 0;
   out_3050259446393573753[20] = 0;
   out_3050259446393573753[21] = 0;
   out_3050259446393573753[22] = 0;
   out_3050259446393573753[23] = 0;
   out_3050259446393573753[24] = 0;
   out_3050259446393573753[25] = 0;
   out_3050259446393573753[26] = 0;
   out_3050259446393573753[27] = 0;
   out_3050259446393573753[28] = 0;
   out_3050259446393573753[29] = 0;
   out_3050259446393573753[30] = 0;
   out_3050259446393573753[31] = 0;
   out_3050259446393573753[32] = 0;
   out_3050259446393573753[33] = 1;
   out_3050259446393573753[34] = 0;
   out_3050259446393573753[35] = 0;
   out_3050259446393573753[36] = 0;
   out_3050259446393573753[37] = 0;
   out_3050259446393573753[38] = 0;
   out_3050259446393573753[39] = 0;
   out_3050259446393573753[40] = 0;
   out_3050259446393573753[41] = 0;
   out_3050259446393573753[42] = 0;
   out_3050259446393573753[43] = 0;
   out_3050259446393573753[44] = 0;
   out_3050259446393573753[45] = 0;
   out_3050259446393573753[46] = 0;
   out_3050259446393573753[47] = 0;
   out_3050259446393573753[48] = 0;
   out_3050259446393573753[49] = 0;
   out_3050259446393573753[50] = 0;
   out_3050259446393573753[51] = 0;
   out_3050259446393573753[52] = 0;
   out_3050259446393573753[53] = 0;
   out_3050259446393573753[54] = 0;
   out_3050259446393573753[55] = 0;
   out_3050259446393573753[56] = 1;
   out_3050259446393573753[57] = 0;
   out_3050259446393573753[58] = 0;
   out_3050259446393573753[59] = 0;
   out_3050259446393573753[60] = 0;
   out_3050259446393573753[61] = 0;
   out_3050259446393573753[62] = 0;
   out_3050259446393573753[63] = 0;
   out_3050259446393573753[64] = 0;
   out_3050259446393573753[65] = 0;
}
void h_10(double *state, double *unused, double *out_8078064670429105046) {
   out_8078064670429105046[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8078064670429105046[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8078064670429105046[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1275381674271808589) {
   out_1275381674271808589[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1275381674271808589[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1275381674271808589[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1275381674271808589[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1275381674271808589[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1275381674271808589[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1275381674271808589[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1275381674271808589[7] = 0;
   out_1275381674271808589[8] = 0;
   out_1275381674271808589[9] = 0;
   out_1275381674271808589[10] = 0;
   out_1275381674271808589[11] = 0;
   out_1275381674271808589[12] = 0;
   out_1275381674271808589[13] = 0;
   out_1275381674271808589[14] = 0;
   out_1275381674271808589[15] = 0;
   out_1275381674271808589[16] = 1;
   out_1275381674271808589[17] = 0;
   out_1275381674271808589[18] = 0;
   out_1275381674271808589[19] = 1;
   out_1275381674271808589[20] = 0;
   out_1275381674271808589[21] = 0;
   out_1275381674271808589[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1275381674271808589[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1275381674271808589[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1275381674271808589[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1275381674271808589[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1275381674271808589[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1275381674271808589[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1275381674271808589[29] = 0;
   out_1275381674271808589[30] = 0;
   out_1275381674271808589[31] = 0;
   out_1275381674271808589[32] = 0;
   out_1275381674271808589[33] = 0;
   out_1275381674271808589[34] = 0;
   out_1275381674271808589[35] = 0;
   out_1275381674271808589[36] = 0;
   out_1275381674271808589[37] = 0;
   out_1275381674271808589[38] = 0;
   out_1275381674271808589[39] = 1;
   out_1275381674271808589[40] = 0;
   out_1275381674271808589[41] = 0;
   out_1275381674271808589[42] = 1;
   out_1275381674271808589[43] = 0;
   out_1275381674271808589[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1275381674271808589[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1275381674271808589[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1275381674271808589[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1275381674271808589[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1275381674271808589[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1275381674271808589[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1275381674271808589[51] = 0;
   out_1275381674271808589[52] = 0;
   out_1275381674271808589[53] = 0;
   out_1275381674271808589[54] = 0;
   out_1275381674271808589[55] = 0;
   out_1275381674271808589[56] = 0;
   out_1275381674271808589[57] = 0;
   out_1275381674271808589[58] = 0;
   out_1275381674271808589[59] = 0;
   out_1275381674271808589[60] = 0;
   out_1275381674271808589[61] = 0;
   out_1275381674271808589[62] = 1;
   out_1275381674271808589[63] = 0;
   out_1275381674271808589[64] = 0;
   out_1275381674271808589[65] = 1;
}
void h_12(double *state, double *unused, double *out_6355347836140463505) {
   out_6355347836140463505[0] = state[0];
   out_6355347836140463505[1] = state[1];
   out_6355347836140463505[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5318021973626059428) {
   out_5318021973626059428[0] = 1;
   out_5318021973626059428[1] = 0;
   out_5318021973626059428[2] = 0;
   out_5318021973626059428[3] = 0;
   out_5318021973626059428[4] = 0;
   out_5318021973626059428[5] = 0;
   out_5318021973626059428[6] = 0;
   out_5318021973626059428[7] = 0;
   out_5318021973626059428[8] = 0;
   out_5318021973626059428[9] = 0;
   out_5318021973626059428[10] = 0;
   out_5318021973626059428[11] = 0;
   out_5318021973626059428[12] = 0;
   out_5318021973626059428[13] = 0;
   out_5318021973626059428[14] = 0;
   out_5318021973626059428[15] = 0;
   out_5318021973626059428[16] = 0;
   out_5318021973626059428[17] = 0;
   out_5318021973626059428[18] = 0;
   out_5318021973626059428[19] = 0;
   out_5318021973626059428[20] = 0;
   out_5318021973626059428[21] = 0;
   out_5318021973626059428[22] = 0;
   out_5318021973626059428[23] = 1;
   out_5318021973626059428[24] = 0;
   out_5318021973626059428[25] = 0;
   out_5318021973626059428[26] = 0;
   out_5318021973626059428[27] = 0;
   out_5318021973626059428[28] = 0;
   out_5318021973626059428[29] = 0;
   out_5318021973626059428[30] = 0;
   out_5318021973626059428[31] = 0;
   out_5318021973626059428[32] = 0;
   out_5318021973626059428[33] = 0;
   out_5318021973626059428[34] = 0;
   out_5318021973626059428[35] = 0;
   out_5318021973626059428[36] = 0;
   out_5318021973626059428[37] = 0;
   out_5318021973626059428[38] = 0;
   out_5318021973626059428[39] = 0;
   out_5318021973626059428[40] = 0;
   out_5318021973626059428[41] = 0;
   out_5318021973626059428[42] = 0;
   out_5318021973626059428[43] = 0;
   out_5318021973626059428[44] = 0;
   out_5318021973626059428[45] = 0;
   out_5318021973626059428[46] = 1;
   out_5318021973626059428[47] = 0;
   out_5318021973626059428[48] = 0;
   out_5318021973626059428[49] = 0;
   out_5318021973626059428[50] = 0;
   out_5318021973626059428[51] = 0;
   out_5318021973626059428[52] = 0;
   out_5318021973626059428[53] = 0;
   out_5318021973626059428[54] = 0;
   out_5318021973626059428[55] = 0;
   out_5318021973626059428[56] = 0;
   out_5318021973626059428[57] = 0;
   out_5318021973626059428[58] = 0;
   out_5318021973626059428[59] = 0;
   out_5318021973626059428[60] = 0;
   out_5318021973626059428[61] = 0;
   out_5318021973626059428[62] = 0;
   out_5318021973626059428[63] = 0;
   out_5318021973626059428[64] = 0;
   out_5318021973626059428[65] = 0;
}
void h_35(double *state, double *unused, double *out_611828150871627896) {
   out_611828150871627896[0] = state[7];
   out_611828150871627896[1] = state[8];
   out_611828150871627896[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6970816324285413847) {
   out_6970816324285413847[0] = 0;
   out_6970816324285413847[1] = 0;
   out_6970816324285413847[2] = 0;
   out_6970816324285413847[3] = 0;
   out_6970816324285413847[4] = 0;
   out_6970816324285413847[5] = 0;
   out_6970816324285413847[6] = 0;
   out_6970816324285413847[7] = 1;
   out_6970816324285413847[8] = 0;
   out_6970816324285413847[9] = 0;
   out_6970816324285413847[10] = 0;
   out_6970816324285413847[11] = 0;
   out_6970816324285413847[12] = 0;
   out_6970816324285413847[13] = 0;
   out_6970816324285413847[14] = 0;
   out_6970816324285413847[15] = 0;
   out_6970816324285413847[16] = 0;
   out_6970816324285413847[17] = 0;
   out_6970816324285413847[18] = 0;
   out_6970816324285413847[19] = 0;
   out_6970816324285413847[20] = 0;
   out_6970816324285413847[21] = 0;
   out_6970816324285413847[22] = 0;
   out_6970816324285413847[23] = 0;
   out_6970816324285413847[24] = 0;
   out_6970816324285413847[25] = 0;
   out_6970816324285413847[26] = 0;
   out_6970816324285413847[27] = 0;
   out_6970816324285413847[28] = 0;
   out_6970816324285413847[29] = 0;
   out_6970816324285413847[30] = 1;
   out_6970816324285413847[31] = 0;
   out_6970816324285413847[32] = 0;
   out_6970816324285413847[33] = 0;
   out_6970816324285413847[34] = 0;
   out_6970816324285413847[35] = 0;
   out_6970816324285413847[36] = 0;
   out_6970816324285413847[37] = 0;
   out_6970816324285413847[38] = 0;
   out_6970816324285413847[39] = 0;
   out_6970816324285413847[40] = 0;
   out_6970816324285413847[41] = 0;
   out_6970816324285413847[42] = 0;
   out_6970816324285413847[43] = 0;
   out_6970816324285413847[44] = 0;
   out_6970816324285413847[45] = 0;
   out_6970816324285413847[46] = 0;
   out_6970816324285413847[47] = 0;
   out_6970816324285413847[48] = 0;
   out_6970816324285413847[49] = 0;
   out_6970816324285413847[50] = 0;
   out_6970816324285413847[51] = 0;
   out_6970816324285413847[52] = 0;
   out_6970816324285413847[53] = 1;
   out_6970816324285413847[54] = 0;
   out_6970816324285413847[55] = 0;
   out_6970816324285413847[56] = 0;
   out_6970816324285413847[57] = 0;
   out_6970816324285413847[58] = 0;
   out_6970816324285413847[59] = 0;
   out_6970816324285413847[60] = 0;
   out_6970816324285413847[61] = 0;
   out_6970816324285413847[62] = 0;
   out_6970816324285413847[63] = 0;
   out_6970816324285413847[64] = 0;
   out_6970816324285413847[65] = 0;
}
void h_32(double *state, double *unused, double *out_6293403362398239558) {
   out_6293403362398239558[0] = state[3];
   out_6293403362398239558[1] = state[4];
   out_6293403362398239558[2] = state[5];
   out_6293403362398239558[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6839651539344673378) {
   out_6839651539344673378[0] = 0;
   out_6839651539344673378[1] = 0;
   out_6839651539344673378[2] = 0;
   out_6839651539344673378[3] = 1;
   out_6839651539344673378[4] = 0;
   out_6839651539344673378[5] = 0;
   out_6839651539344673378[6] = 0;
   out_6839651539344673378[7] = 0;
   out_6839651539344673378[8] = 0;
   out_6839651539344673378[9] = 0;
   out_6839651539344673378[10] = 0;
   out_6839651539344673378[11] = 0;
   out_6839651539344673378[12] = 0;
   out_6839651539344673378[13] = 0;
   out_6839651539344673378[14] = 0;
   out_6839651539344673378[15] = 0;
   out_6839651539344673378[16] = 0;
   out_6839651539344673378[17] = 0;
   out_6839651539344673378[18] = 0;
   out_6839651539344673378[19] = 0;
   out_6839651539344673378[20] = 0;
   out_6839651539344673378[21] = 0;
   out_6839651539344673378[22] = 0;
   out_6839651539344673378[23] = 0;
   out_6839651539344673378[24] = 0;
   out_6839651539344673378[25] = 0;
   out_6839651539344673378[26] = 1;
   out_6839651539344673378[27] = 0;
   out_6839651539344673378[28] = 0;
   out_6839651539344673378[29] = 0;
   out_6839651539344673378[30] = 0;
   out_6839651539344673378[31] = 0;
   out_6839651539344673378[32] = 0;
   out_6839651539344673378[33] = 0;
   out_6839651539344673378[34] = 0;
   out_6839651539344673378[35] = 0;
   out_6839651539344673378[36] = 0;
   out_6839651539344673378[37] = 0;
   out_6839651539344673378[38] = 0;
   out_6839651539344673378[39] = 0;
   out_6839651539344673378[40] = 0;
   out_6839651539344673378[41] = 0;
   out_6839651539344673378[42] = 0;
   out_6839651539344673378[43] = 0;
   out_6839651539344673378[44] = 0;
   out_6839651539344673378[45] = 0;
   out_6839651539344673378[46] = 0;
   out_6839651539344673378[47] = 0;
   out_6839651539344673378[48] = 0;
   out_6839651539344673378[49] = 1;
   out_6839651539344673378[50] = 0;
   out_6839651539344673378[51] = 0;
   out_6839651539344673378[52] = 0;
   out_6839651539344673378[53] = 0;
   out_6839651539344673378[54] = 0;
   out_6839651539344673378[55] = 0;
   out_6839651539344673378[56] = 0;
   out_6839651539344673378[57] = 0;
   out_6839651539344673378[58] = 0;
   out_6839651539344673378[59] = 0;
   out_6839651539344673378[60] = 0;
   out_6839651539344673378[61] = 0;
   out_6839651539344673378[62] = 0;
   out_6839651539344673378[63] = 0;
   out_6839651539344673378[64] = 0;
   out_6839651539344673378[65] = 0;
   out_6839651539344673378[66] = 0;
   out_6839651539344673378[67] = 0;
   out_6839651539344673378[68] = 0;
   out_6839651539344673378[69] = 0;
   out_6839651539344673378[70] = 0;
   out_6839651539344673378[71] = 0;
   out_6839651539344673378[72] = 1;
   out_6839651539344673378[73] = 0;
   out_6839651539344673378[74] = 0;
   out_6839651539344673378[75] = 0;
   out_6839651539344673378[76] = 0;
   out_6839651539344673378[77] = 0;
   out_6839651539344673378[78] = 0;
   out_6839651539344673378[79] = 0;
   out_6839651539344673378[80] = 0;
   out_6839651539344673378[81] = 0;
   out_6839651539344673378[82] = 0;
   out_6839651539344673378[83] = 0;
   out_6839651539344673378[84] = 0;
   out_6839651539344673378[85] = 0;
   out_6839651539344673378[86] = 0;
   out_6839651539344673378[87] = 0;
}
void h_13(double *state, double *unused, double *out_3820595042268445408) {
   out_3820595042268445408[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3820595042268445408[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3820595042268445408[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_130769875267342226) {
   out_130769875267342226[0] = 0;
   out_130769875267342226[1] = 0;
   out_130769875267342226[2] = 0;
   out_130769875267342226[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_130769875267342226[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_130769875267342226[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_130769875267342226[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_130769875267342226[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_130769875267342226[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_130769875267342226[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_130769875267342226[10] = 0;
   out_130769875267342226[11] = 0;
   out_130769875267342226[12] = 0;
   out_130769875267342226[13] = 0;
   out_130769875267342226[14] = 0;
   out_130769875267342226[15] = 0;
   out_130769875267342226[16] = 0;
   out_130769875267342226[17] = 0;
   out_130769875267342226[18] = 0;
   out_130769875267342226[19] = 0;
   out_130769875267342226[20] = 0;
   out_130769875267342226[21] = 0;
   out_130769875267342226[22] = 0;
   out_130769875267342226[23] = 0;
   out_130769875267342226[24] = 0;
   out_130769875267342226[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_130769875267342226[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_130769875267342226[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_130769875267342226[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_130769875267342226[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_130769875267342226[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_130769875267342226[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_130769875267342226[32] = 0;
   out_130769875267342226[33] = 0;
   out_130769875267342226[34] = 0;
   out_130769875267342226[35] = 0;
   out_130769875267342226[36] = 0;
   out_130769875267342226[37] = 0;
   out_130769875267342226[38] = 0;
   out_130769875267342226[39] = 0;
   out_130769875267342226[40] = 0;
   out_130769875267342226[41] = 0;
   out_130769875267342226[42] = 0;
   out_130769875267342226[43] = 0;
   out_130769875267342226[44] = 0;
   out_130769875267342226[45] = 0;
   out_130769875267342226[46] = 0;
   out_130769875267342226[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_130769875267342226[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_130769875267342226[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_130769875267342226[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_130769875267342226[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_130769875267342226[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_130769875267342226[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_130769875267342226[54] = 0;
   out_130769875267342226[55] = 0;
   out_130769875267342226[56] = 0;
   out_130769875267342226[57] = 0;
   out_130769875267342226[58] = 0;
   out_130769875267342226[59] = 0;
   out_130769875267342226[60] = 0;
   out_130769875267342226[61] = 0;
   out_130769875267342226[62] = 0;
   out_130769875267342226[63] = 0;
   out_130769875267342226[64] = 0;
   out_130769875267342226[65] = 0;
}
void h_14(double *state, double *unused, double *out_2910357396975870841) {
   out_2910357396975870841[0] = state[10];
   out_2910357396975870841[1] = state[11];
   out_2910357396975870841[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3050259446393573753) {
   out_3050259446393573753[0] = 0;
   out_3050259446393573753[1] = 0;
   out_3050259446393573753[2] = 0;
   out_3050259446393573753[3] = 0;
   out_3050259446393573753[4] = 0;
   out_3050259446393573753[5] = 0;
   out_3050259446393573753[6] = 0;
   out_3050259446393573753[7] = 0;
   out_3050259446393573753[8] = 0;
   out_3050259446393573753[9] = 0;
   out_3050259446393573753[10] = 1;
   out_3050259446393573753[11] = 0;
   out_3050259446393573753[12] = 0;
   out_3050259446393573753[13] = 0;
   out_3050259446393573753[14] = 0;
   out_3050259446393573753[15] = 0;
   out_3050259446393573753[16] = 0;
   out_3050259446393573753[17] = 0;
   out_3050259446393573753[18] = 0;
   out_3050259446393573753[19] = 0;
   out_3050259446393573753[20] = 0;
   out_3050259446393573753[21] = 0;
   out_3050259446393573753[22] = 0;
   out_3050259446393573753[23] = 0;
   out_3050259446393573753[24] = 0;
   out_3050259446393573753[25] = 0;
   out_3050259446393573753[26] = 0;
   out_3050259446393573753[27] = 0;
   out_3050259446393573753[28] = 0;
   out_3050259446393573753[29] = 0;
   out_3050259446393573753[30] = 0;
   out_3050259446393573753[31] = 0;
   out_3050259446393573753[32] = 0;
   out_3050259446393573753[33] = 1;
   out_3050259446393573753[34] = 0;
   out_3050259446393573753[35] = 0;
   out_3050259446393573753[36] = 0;
   out_3050259446393573753[37] = 0;
   out_3050259446393573753[38] = 0;
   out_3050259446393573753[39] = 0;
   out_3050259446393573753[40] = 0;
   out_3050259446393573753[41] = 0;
   out_3050259446393573753[42] = 0;
   out_3050259446393573753[43] = 0;
   out_3050259446393573753[44] = 0;
   out_3050259446393573753[45] = 0;
   out_3050259446393573753[46] = 0;
   out_3050259446393573753[47] = 0;
   out_3050259446393573753[48] = 0;
   out_3050259446393573753[49] = 0;
   out_3050259446393573753[50] = 0;
   out_3050259446393573753[51] = 0;
   out_3050259446393573753[52] = 0;
   out_3050259446393573753[53] = 0;
   out_3050259446393573753[54] = 0;
   out_3050259446393573753[55] = 0;
   out_3050259446393573753[56] = 1;
   out_3050259446393573753[57] = 0;
   out_3050259446393573753[58] = 0;
   out_3050259446393573753[59] = 0;
   out_3050259446393573753[60] = 0;
   out_3050259446393573753[61] = 0;
   out_3050259446393573753[62] = 0;
   out_3050259446393573753[63] = 0;
   out_3050259446393573753[64] = 0;
   out_3050259446393573753[65] = 0;
}
void h_33(double *state, double *unused, double *out_401422170775147051) {
   out_401422170775147051[0] = state[16];
   out_401422170775147051[1] = state[17];
   out_401422170775147051[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3820259319646556243) {
   out_3820259319646556243[0] = 0;
   out_3820259319646556243[1] = 0;
   out_3820259319646556243[2] = 0;
   out_3820259319646556243[3] = 0;
   out_3820259319646556243[4] = 0;
   out_3820259319646556243[5] = 0;
   out_3820259319646556243[6] = 0;
   out_3820259319646556243[7] = 0;
   out_3820259319646556243[8] = 0;
   out_3820259319646556243[9] = 0;
   out_3820259319646556243[10] = 0;
   out_3820259319646556243[11] = 0;
   out_3820259319646556243[12] = 0;
   out_3820259319646556243[13] = 0;
   out_3820259319646556243[14] = 0;
   out_3820259319646556243[15] = 0;
   out_3820259319646556243[16] = 1;
   out_3820259319646556243[17] = 0;
   out_3820259319646556243[18] = 0;
   out_3820259319646556243[19] = 0;
   out_3820259319646556243[20] = 0;
   out_3820259319646556243[21] = 0;
   out_3820259319646556243[22] = 0;
   out_3820259319646556243[23] = 0;
   out_3820259319646556243[24] = 0;
   out_3820259319646556243[25] = 0;
   out_3820259319646556243[26] = 0;
   out_3820259319646556243[27] = 0;
   out_3820259319646556243[28] = 0;
   out_3820259319646556243[29] = 0;
   out_3820259319646556243[30] = 0;
   out_3820259319646556243[31] = 0;
   out_3820259319646556243[32] = 0;
   out_3820259319646556243[33] = 0;
   out_3820259319646556243[34] = 0;
   out_3820259319646556243[35] = 0;
   out_3820259319646556243[36] = 0;
   out_3820259319646556243[37] = 0;
   out_3820259319646556243[38] = 0;
   out_3820259319646556243[39] = 1;
   out_3820259319646556243[40] = 0;
   out_3820259319646556243[41] = 0;
   out_3820259319646556243[42] = 0;
   out_3820259319646556243[43] = 0;
   out_3820259319646556243[44] = 0;
   out_3820259319646556243[45] = 0;
   out_3820259319646556243[46] = 0;
   out_3820259319646556243[47] = 0;
   out_3820259319646556243[48] = 0;
   out_3820259319646556243[49] = 0;
   out_3820259319646556243[50] = 0;
   out_3820259319646556243[51] = 0;
   out_3820259319646556243[52] = 0;
   out_3820259319646556243[53] = 0;
   out_3820259319646556243[54] = 0;
   out_3820259319646556243[55] = 0;
   out_3820259319646556243[56] = 0;
   out_3820259319646556243[57] = 0;
   out_3820259319646556243[58] = 0;
   out_3820259319646556243[59] = 0;
   out_3820259319646556243[60] = 0;
   out_3820259319646556243[61] = 0;
   out_3820259319646556243[62] = 1;
   out_3820259319646556243[63] = 0;
   out_3820259319646556243[64] = 0;
   out_3820259319646556243[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7803513231790997548) {
  H(in_vec, out_7803513231790997548);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7460255189065293953) {
  err_fun(nom_x, delta_x, out_7460255189065293953);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4071638527375331155) {
  inv_err_fun(nom_x, true_x, out_4071638527375331155);
}
void live_H_mod_fun(double *state, double *out_3526444479561274867) {
  H_mod_fun(state, out_3526444479561274867);
}
void live_f_fun(double *state, double dt, double *out_3349602173172937323) {
  f_fun(state,  dt, out_3349602173172937323);
}
void live_F_fun(double *state, double dt, double *out_5390829708415122205) {
  F_fun(state,  dt, out_5390829708415122205);
}
void live_h_4(double *state, double *unused, double *out_6380028793191626086) {
  h_4(state, unused, out_6380028793191626086);
}
void live_H_4(double *state, double *unused, double *out_8109265692051530393) {
  H_4(state, unused, out_8109265692051530393);
}
void live_h_9(double *state, double *unused, double *out_2910357396975870841) {
  h_9(state, unused, out_2910357396975870841);
}
void live_H_9(double *state, double *unused, double *out_3050259446393573753) {
  H_9(state, unused, out_3050259446393573753);
}
void live_h_10(double *state, double *unused, double *out_8078064670429105046) {
  h_10(state, unused, out_8078064670429105046);
}
void live_H_10(double *state, double *unused, double *out_1275381674271808589) {
  H_10(state, unused, out_1275381674271808589);
}
void live_h_12(double *state, double *unused, double *out_6355347836140463505) {
  h_12(state, unused, out_6355347836140463505);
}
void live_H_12(double *state, double *unused, double *out_5318021973626059428) {
  H_12(state, unused, out_5318021973626059428);
}
void live_h_35(double *state, double *unused, double *out_611828150871627896) {
  h_35(state, unused, out_611828150871627896);
}
void live_H_35(double *state, double *unused, double *out_6970816324285413847) {
  H_35(state, unused, out_6970816324285413847);
}
void live_h_32(double *state, double *unused, double *out_6293403362398239558) {
  h_32(state, unused, out_6293403362398239558);
}
void live_H_32(double *state, double *unused, double *out_6839651539344673378) {
  H_32(state, unused, out_6839651539344673378);
}
void live_h_13(double *state, double *unused, double *out_3820595042268445408) {
  h_13(state, unused, out_3820595042268445408);
}
void live_H_13(double *state, double *unused, double *out_130769875267342226) {
  H_13(state, unused, out_130769875267342226);
}
void live_h_14(double *state, double *unused, double *out_2910357396975870841) {
  h_14(state, unused, out_2910357396975870841);
}
void live_H_14(double *state, double *unused, double *out_3050259446393573753) {
  H_14(state, unused, out_3050259446393573753);
}
void live_h_33(double *state, double *unused, double *out_401422170775147051) {
  h_33(state, unused, out_401422170775147051);
}
void live_H_33(double *state, double *unused, double *out_3820259319646556243) {
  H_33(state, unused, out_3820259319646556243);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
